ASAP2_VERSION 1 51
/begin PROJECT EUP ""

  /begin MODULE CPP ""

    /begin A2ML

      block "IF_DATA" taggedunion if_data {

        "CANAPE_EXT" struct {
          int;             /* version number */
          taggedstruct {
            "LINK_MAP" struct {
              char[256];   /* segment name */
              long;        /* base address of the segment */
              uint;        /* address extension of the segment */
              uint;        /* flag: address is relative to DS */
              long;        /* offset of the segment address */
              uint;        /* datatypValid */
              uint;        /* enum datatyp */
              uint;        /* bit offset of the segment */
            };
            "DISPLAY" struct {
              long;        /* display color */
              double;      /* minimal display value (phys)*/
              double;      /* maximal display value (phys)*/
            };
            "VIRTUAL_CONVERSION" struct {
              char[256];   /* name of the conversion formula */
            };
          };
        };
        "CANAPE_MODULE" struct {
          taggedstruct {
            ("RECORD_LAYOUT_STEPSIZE" struct {
              char[256];   /* name of record layout*/
              uint;        /* stepsize for FNC_VALUES */
              uint;        /* stepsize for AXIS_PTS_X */
              uint;        /* stepsize for AXIS_PTS_Y */
              uint;        /* stepsize for AXIS_PTS_Z */
              uint;        /* stepsize for AXIS_PTS_4 */
              uint;        /* stepsize for AXIS_PTS_5 */
            })*;
          };
        };
        "CANAPE_GROUP" taggedstruct {
          block "STRUCTURE_LIST" (char[1024])*;
        };

        "ASAP1B_CCP" taggedstruct {
          (block "SOURCE" struct {
            char[101];
            int;
            long;
            taggedstruct {
              "DISPLAY_IDENTIFIER" char[32];
              block "QP_BLOB" struct {
                uint;
                taggedstruct {
                  "LENGTH" uint;
                  "CAN_ID_VARIABLE" ;
                  "CAN_ID_FIXED" ulong;
                  ("RASTER" uchar)*;
                  ("EXCLUSIVE" int)*;
                  "REDUCTION_ALLOWED" ;
                  "FIRST_PID" uchar;
                };
              };
            };
          })*;
          (block "RASTER" struct {
            char[101];
            char[9];
            uchar;
            int;
            long;
            taggedstruct {
              ("EXCLUSIVE" uchar)*;
            };
          })*;
          (block "EVENT_GROUP" struct {
            char[101];
            char[9];
            taggedstruct {
              ("RASTER" uchar)*;
            };
          })*;
          block "SEED_KEY" struct {
            char[256];
            char[256];
            char[256];
          };
          block "CHECKSUM" struct {
            char[256];
          };
          block "TP_BLOB" struct {
            uint;
            uint;
            ulong;
            ulong;
            uint;
            uint;
            taggedstruct {
              block "CAN_PARAM" struct {
                uint;
                uchar;
                uchar;
              };
              "BAUDRATE" ulong;
              "SAMPLE_POINT" uchar;
              "SAMPLE_RATE" uchar;
              "BTL_CYCLES" uchar;
              "SJW" uchar;
              "SYNC_EDGE" enum {
                "SINGLE" = 0,
                "DUAL" = 1
              };
              "DAQ_MODE" enum {
                "ALTERNATING" = 0,
                "BURST" = 1
              };
              "BYTES_ONLY" ;
              "RESUME_SUPPORTED" ;
              "STORE_SUPPORTED" ;
              "CONSISTENCY" enum {
                "DAQ" = 0,
                "ODT" = 1
              };
              "ADDRESS_EXTENSION" enum {
                "DAQ" = 0,
                "ODT" = 1
              };
              block "CHECKSUM_PARAM" struct {
                uint;
                ulong;
                taggedstruct {
                  "CHECKSUM_CALCULATION" enum {
                    "ACTIVE_PAGE" = 0,
                    "BIT_OR_WITH_OPT_PAGE" = 1
                  };
                };
              };
              (block "DEFINED_PAGES" struct {
                uint;
                char[101];
                uint;
                ulong;
                ulong;
                taggedstruct {
                  "RAM" ;
                  "ROM" ;
                  "FLASH" ;
                  "EEPROM" ;
                  "RAM_INIT_BY_ECU" ;
                  "RAM_INIT_BY_TOOL" ;
                  "AUTO_FLASH_BACK" ;
                  "FLASH_BACK" ;
                  "DEFAULT" ;
                };
              })*;
              ("OPTIONAL_CMD" uint)*;
            };
          };
          ("ADDR_MAPPING" struct {
            ulong;
            ulong;
            ulong;
          })*;
          "DP_BLOB" struct {
            uint;
            ulong;
            ulong;
          };
          "KP_BLOB" struct {
            uint;
            ulong;
            ulong;
            taggedstruct {
              ("RASTER" uchar)*;
            };
          };
        };
      };

    /end A2ML

    /begin MOD_COMMON ""
      BYTE_ORDER MSB_FIRST
      ALIGNMENT_BYTE 1
      ALIGNMENT_WORD 2
      ALIGNMENT_LONG 4
      ALIGNMENT_FLOAT32_IEEE 4
      ALIGNMENT_FLOAT64_IEEE 8
    /end MOD_COMMON

    /begin IF_DATA ASAP1B_CCP
      /begin SOURCE
        "10ms" 0x4 0x1
        /begin QP_BLOB
          0x0
          LENGTH 0x14
          CAN_ID_FIXED 0x101
          RASTER 0x0
          FIRST_PID 0x0
        /end QP_BLOB
      /end SOURCE
      /begin SOURCE
        "100ms" 0x4 0xA
        /begin QP_BLOB
          0x1
          LENGTH 0x14
          CAN_ID_FIXED 0x101
          RASTER 0x1
          FIRST_PID 0x14
        /end QP_BLOB
      /end SOURCE
      /begin RASTER
        "10ms" "10ms" 0x0 0x4 0x1
      /end RASTER
      /begin RASTER
        "100ms" "100ms" 0x1 0x4 0xA
      /end RASTER
      /begin TP_BLOB
        0x201 0x206 0x100 0x101 0x100 0x1
        BAUDRATE 0x3D090
        SAMPLE_POINT 0x4B
        SAMPLE_RATE 0x1
        BTL_CYCLES 0x8
        SJW 0x2
        SYNC_EDGE SINGLE
        DAQ_MODE BURST
        CONSISTENCY ODT
        ADDRESS_EXTENSION DAQ
        /begin CHECKSUM_PARAM
          0xFFFF8007 0x10000
          CHECKSUM_CALCULATION ACTIVE_PAGE
        /end CHECKSUM_PARAM
        /begin DEFINED_PAGES
          0x1 "ROM_PAGE" 0x0 0x7D0000 0x4000
          ROM
        /end DEFINED_PAGES
        /begin DEFINED_PAGES
          0x2 "RAM" 0x0 0xF0000 0x4000
          RAM
          RAM_INIT_BY_ECU
        /end DEFINED_PAGES
        OPTIONAL_CMD 0x9
        OPTIONAL_CMD 0xE
        OPTIONAL_CMD 0x11
        OPTIONAL_CMD 0xC
        OPTIONAL_CMD 0xD
        OPTIONAL_CMD 0xF
        OPTIONAL_CMD 0x23
        OPTIONAL_CMD 0x8
      /end TP_BLOB
    /end IF_DATA
    
        /begin MOD_PAR "Õû³µ¿ØÖÆÆ÷105E"
      ADDR_EPK 0x13F6A7
      /begin MEMORY_SEGMENT
        EFLASHDATA "" DATA FLASH EXTERN 0x7D0000 0x4000 -1 -1 -1 -1 -1
      /end MEMORY_SEGMENT
      /begin MEMORY_SEGMENT
        ERAMDATA "" DATA RAM EXTERN 0xF0000 0x4000 -1 -1 -1 -1 -1
      /end MEMORY_SEGMENT
      NO_OF_INTERFACES 1
    /end MOD_PAR